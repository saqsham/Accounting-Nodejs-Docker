user nginx;

worker_processes 4;

events { worker_connections 1024; }

http {

    # sendfile on;
    upstream myapp {
        server app1:3000 weight=2;
        server app2:3010 weight=4; #  weight=10 max_fails=3 fail_timeout=60s
    }

    server {
        listen       3030;
        server_name  localhost;

        location / { 
            # enhance the performance
            proxy_set_header Host $host;
            proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_cache_bypass $http_upgrade;

            # main + errors fix
            proxy_buffering off; 
            proxy_cache_valid any 48h;
            proxy_max_temp_file_size 0;
            proxy_pass http://myapp;

            # Its also a good practice to set following headers when doing reverse proxy 
            # (so backend get client information instead of reverse proxy server):
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-User  $remote_user;
        }

        location /nginx_status {
            # Enable Nginx stats
            stub_status on;
            # Only allow access from your IP e.g 1.1.1.1 or localhost #
            allow 127.0.0.1;
            # Other request should be denied
            deny all;
    }

    }   
}