version: '3.6'

services: 
  # mysql database
  database:
    image: database
    build: 
      context: .
      dockerfile: docker/db/Dockerfile
    restart: always
    # command: --init-file /data/application/init.sql
    volumes:
      - ../mysql_init:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_DATABASE=golang"
      - "MYSQL_USER=saqsham"
      - "MYSQL_PASSWORD=1234"
      - "MYSQL_ROOT_PASSWORD=1234"
    ports:
      - 3306:3306
    container_name: databaseGo
    security_opt:
      - seccomp:unconfined # not safe
    networks:
      - mynetwork

  adminer:
    image: adminer:4.7
    restart: always
    container_name: adminer_mysql
    ports:
      - 8080:8080
    depends_on:
      - database
    environment:
      PMA_HOST: database

  # golang web app
  app1:
    image: app
    container_name: app1
    build: 
      context: .
      dockerfile: docker/app/Dockerfile
    restart: always
    depends_on:
      - database
    ports:
      - 3000:3000
    environment:
      - PORT=:3000
    networks:
      - mynetwork

  app2:
    image: app
    container_name: app2
    build: 
      context: .
      dockerfile: docker/app/Dockerfile
    restart: always
    depends_on:
      - database
    ports:
      - 3010:3010
    environment:
      - PORT=:3010
    networks:
      - mynetwork

  # nginx proxy
  proxy:
    image: proxy
    build: 
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: proxy
    # volumes: 
    #   - ./app-main/nginx.conf:/etc/nginx/conf.d/proxy.conf
    restart: always
    ports: 
      - 3030:3030
      # - "443:443"
    depends_on: 
      - app1
      - app2
    networks:
      - mynetwork

# network
networks: 
  mynetwork:
    driver: bridge
      